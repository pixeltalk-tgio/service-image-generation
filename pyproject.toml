[project]
name = "pixeltalk-service"
version = "0.1.0"
description = "Audio to AI-generated artwork service"
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.115.5",
    "uvicorn>=0.32.1",
    "streamlit>=1.40.1",
    "streamlit-webrtc>=0.47.9",
    "streamlit-mic-recorder>=0.0.8",
    "openai>=1.55.0",
    "python-dotenv>=1.0.1",
    "python-multipart>=0.0.17",
    "requests>=2.32.3",
    "pydantic>=2.10.1",
    "firebase-admin>=6.6.0",
    "google-cloud-storage>=2.18.2",
    "google-cloud-firestore>=2.19.0",
    "PyAudio>=0.2.14",
    "SpeechRecognition>=3.11.0",
    # Database migration dependencies
    "psycopg2-binary>=2.9.9",
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.29.0",
    # Neon Data API with PostgREST
    "postgrest>=0.17.2",
    # Structured outputs and video generation
    "pydantic>=2.8.2",
    "google-cloud-aiplatform>=1.38.0",
    "google-auth>=2.23.0",
    "aiohttp>=3.9.0",
    "cloudinary>=1.44.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend"]

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = ["E501"]  # line too long

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.mypy]
python_version = "3.10"
strict = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
